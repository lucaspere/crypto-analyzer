syntax = "proto3";

package analytics;

import "google/protobuf/timestamp.proto";
import "trade.proto";

service AnalyticsService {
    rpc GetTradeAnalytics(GetTradeAnalyticsRequest) returns (GetTradeAnalyticsResponse);
    rpc GetMovingAverage(GetMovingAverageRequest) returns (GetMovingAverageResponse);
    rpc GetEma(GetMovingAverageRequest) returns (GetMovingAverageResponse);
    rpc GetMacd(GetMacdRequest) returns (GetMacdResponse);
    rpc SubscribeToTrades(SubscribeToTradesRequest) returns (stream data.Trade);
}

message GetTradeAnalyticsRequest {
    string symbol = 1;
    google.protobuf.Timestamp start_timestamp = 2;
    google.protobuf.Timestamp end_timestamp = 3;
}

message GetTradeAnalyticsResponse {
    double total_volume_in_quotes = 1;
    double vwap = 2;
    uint64 trades_count = 3;
}

message SubscribeToTradesRequest {
    string symbol = 1;
}

message GetMovingAverageRequest {
    string symbol = 1;
    google.protobuf.Timestamp start_timestamp = 2;
    google.protobuf.Timestamp end_timestamp = 3;
    uint32 window_size = 4;
}

message MovingAverageDataPoint {
    uint64 timestamp = 1;
    double value = 2;
}

message GetMovingAverageResponse {
    repeated MovingAverageDataPoint points = 1;
}

message GetMacdRequest {
    string symbol = 1;
    google.protobuf.Timestamp start_timestamp = 2;
    google.protobuf.Timestamp end_timestamp = 3;
    uint32 fast_period = 4;
    uint32 slow_period = 5;
    uint32 signal_period = 6;
}

message MacdDataPoint {
    uint64 timestamp = 1;
    double macd_line = 2;
    double signal_line = 3;
    double histogram = 4;
}

message GetMacdResponse {
    repeated MacdDataPoint points = 1;
}